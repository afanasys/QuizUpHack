// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuizUpHack;
//
//    var loginResponseModel = LoginResponseModel.FromJson(jsonString);

namespace QuizUpHack
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LoginResponseModel
    {
        [JsonProperty("onboard")]
        public bool Onboard { get; set; }

        [JsonProperty("player")]
        public Player Player { get; set; }
    }

    public partial class Player
    {
        [JsonProperty("autofollow")]
        public bool Autofollow { get; set; }

        [JsonProperty("banners")]
        public List<object> Banners { get; set; }

        [JsonProperty("bio")]
        public object Bio { get; set; }

        [JsonProperty("blocking")]
        public List<object> Blocking { get; set; }

        [JsonProperty("boosters")]
        public Boosters Boosters { get; set; }

        [JsonProperty("created")]
        public DateTimeOffset Created { get; set; }

        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("feature_flags")]
        public List<object> FeatureFlags { get; set; }

        [JsonProperty("follow_requested")]
        public bool FollowRequested { get; set; }

        [JsonProperty("follower_total")]
        public long FollowerTotal { get; set; }

        [JsonProperty("following_total")]
        public long FollowingTotal { get; set; }

        [JsonProperty("games_drawn_total")]
        public long GamesDrawnTotal { get; set; }

        [JsonProperty("games_lost_total")]
        public long GamesLostTotal { get; set; }

        [JsonProperty("games_played_total")]
        public long GamesPlayedTotal { get; set; }

        [JsonProperty("games_won_total")]
        public long GamesWonTotal { get; set; }

        [JsonProperty("gender")]
        public object Gender { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("is_followed_by_me")]
        public bool IsFollowedByMe { get; set; }

        [JsonProperty("last_activity")]
        public DateTimeOffset LastActivity { get; set; }

        [JsonProperty("latest_achievements")]
        public object LatestAchievements { get; set; }

        [JsonProperty("locale")]
        public string Locale { get; set; }

        [JsonProperty("location")]
        public Location Location { get; set; }

        [JsonProperty("ltv")]
        public long Ltv { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("oauth_user_ids")]
        public Boosters OauthUserIds { get; set; }

        [JsonProperty("picture_urls")]
        public PictureUrls PictureUrls { get; set; }

        [JsonProperty("power_ups")]
        public Boosters PowerUps { get; set; }

        [JsonProperty("present")]
        public bool Present { get; set; }

        [JsonProperty("private")]
        public bool Private { get; set; }

        [JsonProperty("profile_photo")]
        public object ProfilePhoto { get; set; }

        [JsonProperty("quiz_coins")]
        public long QuizCoins { get; set; }

        [JsonProperty("rank")]
        public long Rank { get; set; }

        [JsonProperty("rewards_count")]
        public long RewardsCount { get; set; }

        [JsonProperty("team_member")]
        public bool TeamMember { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("top_topics")]
        public object TopTopics { get; set; }

        [JsonProperty("topics")]
        public Boosters Topics { get; set; }

        [JsonProperty("topics_following")]
        public List<TopicsFollowing> TopicsFollowing { get; set; }

        [JsonProperty("tournament_crown")]
        public string TournamentCrown { get; set; }

        [JsonProperty("tournament_laurel_crown")]
        public string TournamentLaurelCrown { get; set; }

        [JsonProperty("wallpaper")]
        public object Wallpaper { get; set; }
    }

    public partial class Boosters
    {
    }

    public partial class Location
    {
        [JsonProperty("city_name")]
        public object CityName { get; set; }

        [JsonProperty("country_code")]
        public string CountryCode { get; set; }

        [JsonProperty("country_name")]
        public string CountryName { get; set; }

        [JsonProperty("region_code")]
        public string RegionCode { get; set; }

        [JsonProperty("region_name")]
        public string RegionName { get; set; }
    }

    public partial class PictureUrls
    {
        [JsonProperty("wallpaper/original")]
        public string WallpaperOriginal { get; set; }
    }

    public partial class TopicsFollowing
    {
        [JsonProperty("banner_name")]
        public string BannerName { get; set; }

        [JsonProperty("category")]
        public string Category { get; set; }

        [JsonProperty("deleted")]
        public bool Deleted { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("icon")]
        public Icon Icon { get; set; }

        [JsonProperty("icon_url")]
        public Uri IconUrl { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("new_mark")]
        public object NewMark { get; set; }

        [JsonProperty("path")]
        public string Path { get; set; }

        [JsonProperty("primary_collection")]
        public PrimaryCollection PrimaryCollection { get; set; }

        [JsonProperty("slug")]
        public string Slug { get; set; }

        [JsonProperty("total_xp")]
        public long TotalXp { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("update_mark")]
        public object UpdateMark { get; set; }
    }

    

    

    public partial class LoginResponseModel
    {
        public static LoginResponseModel FromJson(string json) => JsonConvert.DeserializeObject<LoginResponseModel>(json, QuizUpHack.Converter.Settings);
    }

    
}
