namespace QuizUpHack.Models.ResponseModels
{
    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using QuizUpHack;
    //
    //    var tournamentGameEndedResponseModel = TournamentGameEndedResponseModel.FromJson(jsonString);

    namespace QuizUpHack
    {
        using System;
        using System.Globalization;
        using Newtonsoft.Json;
        using Newtonsoft.Json.Converters;

        public partial class TournamentGameEndedResponseModel
        {
            [JsonProperty("game_ended_status")]
            public GameEndedStatus GameEndedStatus { get; set; }
        }

        public partial class GameEndedStatus
        {
            [JsonProperty("game")]
            public Game Game { get; set; }

            [JsonProperty("score")]
            public long Score { get; set; }

            [JsonProperty("leaderboardScore")]
            public long LeaderboardScore { get; set; }

            [JsonProperty("time_in_millis")]
            public long TimeInMillis { get; set; }

            [JsonProperty("previous_high_score")]
            public long PreviousHighScore { get; set; }

            [JsonProperty("games_played")]
            public long GamesPlayed { get; set; }

            [JsonProperty("tournament_games_played")]
            public long TournamentGamesPlayed { get; set; }
        }
        

        public partial class TournamentGameEndedResponseModel
        {
            public static TournamentGameEndedResponseModel FromJson(string json) => JsonConvert.DeserializeObject<TournamentGameEndedResponseModel>(json, QuizUpHack.Converter.Settings);
        }

       
    }

}
